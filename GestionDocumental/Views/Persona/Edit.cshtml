@model GestionDocumental.Models.ListViewPersona
@{
    IEnumerable<SelectListItem> itemsArea = (IEnumerable<SelectListItem>)ViewBag.itemsArea;
    IEnumerable<SelectListItem> itemsRol = (IEnumerable<SelectListItem>)ViewBag.itemsRol;
    IEnumerable<SelectListItem> itemsSede = (IEnumerable<SelectListItem>)ViewBag.itemsSede;
}

@using (Html.BeginForm("Update", "Persona", FormMethod.Post))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">

    <h4>@ViewBag.message</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.IdPersona)
    <div class="form-group">
        @Html.LabelFor(model => model.primerNombre, "Primer nombre", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.primerNombre, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.primerNombre, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.segundoNombre, "Segundo nombre", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.segundoNombre, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.segundoNombre, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.primerApellido, "Primer apellido", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.primerApellido, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.primerApellido, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.segundoApellido, "Segundo apellido", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.segundoApellido, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.segundoApellido, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.documento, "Documento", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.documento, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.documento, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.telefono, "Teléfono", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.telefono, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.telefono, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.usuario, "Usuario", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.usuario, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.usuario, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.clave, "Clave", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.clave, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.clave, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Id_Area, "Area", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Id_Area", itemsArea, "Seleccione...", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Id_Area, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Id_Rol, "Rol", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Id_Rol", itemsRol, "Seleccione...", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Id_Rol, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Id_Sede, "Sede", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Id_Sede", itemsSede, "Seleccione...", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Id_Sede, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Actualizar" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Atrás", "Index")
</div>

